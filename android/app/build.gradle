plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
def flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

android {
    namespace = "com.example.touch"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.touch"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // تأكد من إعداد signingConfig بشكل صحيح إذا كنت بحاجة إلى ذلك
            signingConfig = signingConfigs.debug // Update with your release signing config if needed
        }
    }
}

// Kotlin standard library dependencies
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.0" // تأكد من استخدام الإصدار الصحيح
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.0" // إذا كنت بحاجة إليها
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.0" // إذا كنت بحاجة إليها
}

flutter {
    source = "../.."
}
